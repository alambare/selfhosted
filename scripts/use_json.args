# Fill in from Google's JSON

# Look at all media files and ignore JSON
--ext
json

# Recursive
-r

# Ignore Warning [minor]
-m

# Show processed filenames
# -v0

# Check if the corresponding JSON exists
-if
(-e "${Directory}/${Filename}".".json")

# Attempt to modify media only if the info doesn't already exist
-if
($Filetype eq "MP4" and not $quicktime:CreateDate) or ($Filetype eq "MP4" and $quicktime:CreateDate eq "0000:00:00 00:00:00") or ($Filetype eq "MOV" and not $quicktime:CreateDate) or ($Filetype eq "MOV" and $quicktime:CreateDate eq "0000:00:00 00:00:00") or ($Filetype eq "JPEG" and not $exif:DateTimeOriginal) or ($Filetype eq "PNG" and not $PNG:CreationTime)

# Attempt to read in the JSON
-tagsfromfile
%d%F.json

# Input dates are formated as timestamp
-d
%s

#
# Write out the tags.
#

# EXIF for regular JPG photos
-AllDates<PhotoTakenTimeTimestamp

# PNG-specific
-XMP-Exif:DateTimeOriginal<PhotoTakenTimeTimestamp
-PNG:CreationTime<PhotoTakenTimeTimestamp

# Quicktime / MP4. Assume that timestamp is in UTC.
-Quicktime:CreateDate<PhotoTakenTimeTimestamp
-QuickTime:TrackCreateDate<PhotoTakenTimeTimestamp
-QuickTime:TrackModifyDate<PhotoTakenTimeTimestamp
-QuickTime:MediaCreateDate<PhotoTakenTimeTimestamp
-QuickTime:MediaModifyDate<PhotoTakenTimeTimestamp

# Rate Favorited as 5
-XMP-xmp:Rating<${Favorited;$_=5 if $_=~/true/i}

# Include description
-Caption-Abstract<Description
-Description<Description

# GPS information
-GPSLatitude*<${GeoDataLatitude;$_ = undef if $_ eq "0.0"}
-GPSLongitude*<${GeoDataLongitude;$_ = undef if $_ eq "0.0"}

# Clobber everything
-overwrite_original
